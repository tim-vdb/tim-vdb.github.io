import*as THREE from"https://cdn.jsdelivr.net/npm/three@0.156.0/build/three.module.js";console.log(THREE,"THREE");import{GLTFLoader}from"https://cdn.jsdelivr.net/npm/three@0.156.0/examples/jsm/loaders/GLTFLoader.js";console.log(GLTFLoader,"GLTFLoader");import{OrbitControls}from"https://cdn.jsdelivr.net/npm/three@0.156.0/examples/jsm/controls/OrbitControls.js";console.log(OrbitControls,"OrbitControls");import{EffectComposer}from"https://cdn.jsdelivr.net/npm/three@0.156.0/examples/jsm/postprocessing/EffectComposer.js";console.log(EffectComposer,"EffectComposer");import{RenderPass}from"https://cdn.jsdelivr.net/npm/three@0.156.0/examples/jsm/postprocessing/RenderPass.js";console.log(RenderPass,"RenderPass");import{UnrealBloomPass}from"https://cdn.jsdelivr.net/npm/three@0.156.0/examples/jsm/postprocessing/UnrealBloomPass.js";console.log(UnrealBloomPass,"UnrealBloomPass");import{ShaderPass}from"https://cdn.jsdelivr.net/npm/three@0.156.0/examples/jsm/postprocessing/ShaderPass.js";console.log(ShaderPass,"ShaderPass");import{RGBELoader}from"https://cdn.jsdelivr.net/npm/three@0.156.0/examples/jsm/loaders/RGBELoader.js";console.log(RGBELoader,"RGBELoader");import{DRACOLoader}from"https://cdn.jsdelivr.net/npm/three@0.156.0/examples/jsm/loaders/DRACOLoader.js";console.log(DRACOLoader,"DRACOLoader");const Mustang3D=document.getElementById("mustang"),divtest=document.getElementById("div_mustang"),realcanvasMustang=document.querySelector("#div_mustang canvas"),scene=new THREE.Scene,camera=new THREE.PerspectiveCamera(75,divtest.clientWidth/divtest.clientHeight,.1,100),renderer=new THREE.WebGLRenderer({Mustang3D:Mustang3D,antialias:!0});renderer.setClearColor(1842204,1),renderer.setSize(divtest.clientWidth,divtest.clientHeight),renderer.setPixelRatio(window.devicePixelRatio),divtest.appendChild(renderer.domElement);const pmremGenerator=new THREE.PMREMGenerator(renderer);pmremGenerator.compileEquirectangularShader();const rgbeLoader=new RGBELoader;rgbeLoader.load("./public/wildflower_field_4k.hdr",(function(texture){const envMap=pmremGenerator.fromEquirectangular(texture).texture;texture.dispose(),pmremGenerator.dispose(),renderer.toneMapping=THREE.ACESFilmicToneMapping,renderer.toneMappingExposure=.5,scene.environment=envMap,scene.background=new THREE.Color(4473924)}));const controls=new OrbitControls(camera,renderer.domElement);camera.position.set(-2,2,4),controls.minDistance=4,controls.maxDistance=6,controls.enablePan=!1,controls.update();const gridHelper=new THREE.GridHelper(100,100,16711680);scene.add(gridHelper);const loader=new GLTFLoader,dloader=new DRACOLoader;dloader.setDecoderPath("https://www.gstatic.com/draco/versioned/decoders/1.5.7/"),dloader.setDecoderConfig({type:"js"}),loader.setDRACOLoader(dloader),loader.load("./public/mustang.glb",(function(gltf){const mesh=gltf.scene;mesh.rotation.y=-Math.PI/2,mesh.position.set(0,-.1,0),scene.add(mesh)}),void 0,(function(error){console.error(error)}));const renderScene=new RenderPass(scene,camera),bloomPass=new UnrealBloomPass(new THREE.Vector2(window.innerWidth,window.innerHeight),.5,1,1),composer=new EffectComposer(renderer);function resizeMustang(){const width=divtest.clientWidth,height=divtest.clientHeight,pixelRatio=window.devicePixelRatio||1;renderer.setSize(width*pixelRatio,height*pixelRatio,!1),composer.setSize(width*pixelRatio,height*pixelRatio),renderer.domElement.style.width=`${width}px`,renderer.domElement.style.height=`${height}px`,camera.aspect=width/height,camera.updateProjectionMatrix()}function animate(){requestAnimationFrame(animate),renderer.clear(),renderer.render(scene,camera),composer.render()}composer.addPass(renderScene),composer.addPass(bloomPass),window.addEventListener("resize",resizeMustang),resizeMustang(),animate(),Mustang3D.remove();